"use strict";(self.webpackChunkedutrace_bridge=self.webpackChunkedutrace_bridge||[]).push([[353],{1344:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var s=t(4848),i=t(8453);const r={},d="Smart Contracts Documentation",c={id:"SmartContracts",title:"Smart Contracts Documentation",description:"\ud83d\udcdd Overview",source:"@site/docs/SmartContracts.md",sourceDirName:".",slug:"/SmartContracts",permalink:"/EduTraceBridge_docs/SmartContracts",draft:!1,unlisted:!1,editUrl:"https://github.com/vietvo371/EduTraceBridge_docs/edit/main/docs/SmartContracts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"H\u01b0\u1edbng d\u1eabn c\xe0i \u0111\u1eb7t EduBridgeTrace",permalink:"/EduTraceBridge_docs/Installation"},next:{title:"H\u01b0\u1edbng d\u1eabn d\xe0nh cho Sinh vi\xean",permalink:"/EduTraceBridge_docs/Guides/student-guide"}},l={},o=[{value:"\ud83d\udcdd Overview",id:"-overview",level:2},{value:"\ud83d\udd10 DZAccessControl Contract",id:"-dzaccesscontrol-contract",level:2},{value:"\ud83d\udcca ResultHash Contract",id:"-resulthash-contract",level:2},{value:"\ud83c\udf93 CertificateNFT Contract",id:"-certificatenft-contract",level:2},{value:"\ud83d\udd04 Quy tr\xecnh t\u01b0\u01a1ng t\xe1c",id:"-quy-tr\xecnh-t\u01b0\u01a1ng-t\xe1c",level:2},{value:"T\u1ea1o v\xe0 qu\u1ea3n l\xfd \u0111\u1ec1 thi",id:"t\u1ea1o-v\xe0-qu\u1ea3n-l\xfd-\u0111\u1ec1-thi",level:3},{value:"N\u1ed9p v\xe0 l\u01b0u k\u1ebft qu\u1ea3",id:"n\u1ed9p-v\xe0-l\u01b0u-k\u1ebft-qu\u1ea3",level:3},{value:"C\u1ea5p ch\u1ee9ng ch\u1ec9",id:"c\u1ea5p-ch\u1ee9ng-ch\u1ec9",level:3},{value:"\ud83d\udd12 B\u1ea3o m\u1eadt",id:"-b\u1ea3o-m\u1eadt",level:2},{value:"Ph\xe2n quy\u1ec1n",id:"ph\xe2n-quy\u1ec1n",level:3},{value:"Ki\u1ec3m to\xe1n",id:"ki\u1ec3m-to\xe1n",level:3},{value:"\ud83d\udcda Testing",id:"-testing",level:2},{value:"\ud83d\udd04 Upgrades &amp; Migration",id:"-upgrades--migration",level:2},{value:"\ud83d\udcda T\xe0i li\u1ec7u tham kh\u1ea3o",id:"-t\xe0i-li\u1ec7u-tham-kh\u1ea3o",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"smart-contracts-documentation",children:"Smart Contracts Documentation"}),"\n",(0,s.jsx)(e.h2,{id:"-overview",children:"\ud83d\udcdd Overview"}),"\n",(0,s.jsx)(e.p,{children:"EduBridgeTrace s\u1eed d\u1ee5ng c\xe1c smart contract \u0111\u1ec3 qu\u1ea3n l\xfd quy\u1ec1n truy c\u1eadp, \u0111\u1ec1 thi, k\u1ebft qu\u1ea3 v\xe0 ch\u1ee9ng ch\u1ec9 tr\xean blockchain:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"DZAccessControl - Qu\u1ea3n l\xfd ph\xe2n quy\u1ec1n v\xe0 \u0111\u1ecba ch\u1ec9 sinh vi\xean"}),"\n",(0,s.jsx)(e.li,{children:"DZBlockChain - Qu\u1ea3n l\xfd th\xf4ng tin blockchain"}),"\n",(0,s.jsx)(e.li,{children:"DZCertificate - Qu\u1ea3n l\xfd ch\u1ee9ng ch\u1ec9"}),"\n",(0,s.jsx)(e.li,{children:"DZExamManager - Qu\u1ea3n l\xfd \u0111\u1ec1 thi"}),"\n",(0,s.jsx)(e.li,{children:"DZReviewManager - Qu\u1ea3n l\xfd ph\xfac kh\u1ea3o"}),"\n",(0,s.jsx)(e.li,{children:"DZScoreManager - Qu\u1ea3n l\xfd \u0111i\u1ec3m s\u1ed1"}),"\n",(0,s.jsx)(e.li,{children:"DZStudentAnswer - Qu\u1ea3n l\xfd b\xe0i l\xe0m sinh vi\xean"}),"\n",(0,s.jsx)(e.li,{children:"DZTestManager - Qu\u1ea3n l\xfd b\xe0i thi"}),"\n",(0,s.jsx)(e.li,{children:"DZTraceLogger - Ghi log h\u1ec7 th\u1ed1ng"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"-dzaccesscontrol-contract",children:"\ud83d\udd10 DZAccessControl Contract"}),"\n",(0,s.jsx)(e.p,{children:"Contract qu\u1ea3n l\xfd ph\xe2n quy\u1ec1n v\xe0 \u0111\u1ecba ch\u1ec9 sinh vi\xean."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport "./Errors.sol";\n\nabstract contract DZAccessControl {\n    // Mapping qu\u1ea3n l\xfd roles\n    mapping(bytes32 => mapping(address => bool)) private _roles;\n    mapping(bytes32 => bytes32) private _roleAdmins;\n\n    // \u0110\u1ecbnh ngh\u0129a c\xe1c role\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n    bytes32 public constant ADMIN_ROLE = keccak256("ADMIN_ROLE");\n    bytes32 public constant LECTURER_ROLE = keccak256("LECTURER_ROLE");\n    bytes32 public constant STUDENT_ROLE = keccak256("STUDENT_ROLE");\n    bytes32 public constant EMPLOYER_ROLE = keccak256("EMPLOYER_ROLE");\n\n    // Mapping qu\u1ea3n l\xfd \u0111\u1ecba ch\u1ec9 sinh vi\xean\n    mapping(uint256 => address) public studentAddresses;\n    mapping(address => uint256) public addressToStudentId;\n\n    // Events\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n    event StudentAddressSet(uint256 indexed student_id, address indexed studentAddress, address setBy);\n    event StudentAddressUpdated(uint256 indexed student_id, address indexed oldAddress, address indexed newAddress, address updatedBy);\n\n    // Modifier ki\u1ec3m tra quy\u1ec1n\n    modifier onlyRole(bytes32 role) {\n        require(hasRole(role, msg.sender), "Access denied");\n        _;\n    }\n\n    // Kh\u1edfi t\u1ea1o quy\u1ec1n ban \u0111\u1ea7u\n    function _initializeAccessControl(address deployer) internal {\n        _grantRole(DEFAULT_ADMIN_ROLE, deployer);\n        _grantRole(ADMIN_ROLE, deployer);\n        _setRoleAdmin(LECTURER_ROLE, ADMIN_ROLE);\n        _setRoleAdmin(STUDENT_ROLE, ADMIN_ROLE);\n        _setRoleAdmin(EMPLOYER_ROLE, ADMIN_ROLE);\n    }\n\n    // Ki\u1ec3m tra quy\u1ec1n\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role][account];\n    }\n\n    // C\u1ea5p quy\u1ec1n\n    function _grantRole(bytes32 role, address account) internal {\n        if (!hasRole(role, account)) {\n            _roles[role][account] = true;\n            emit RoleGranted(role, account, msg.sender);\n        }\n    }\n\n    // Thu h\u1ed3i quy\u1ec1n\n    function _revokeRole(bytes32 role, address account) internal {\n        if (hasRole(role, account)) {\n            _roles[role][account] = false;\n            emit RoleRevoked(role, account, msg.sender);\n        }\n    }\n\n    // Thi\u1ebft l\u1eadp admin cho role\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal {\n        _roleAdmins[role] = adminRole;\n    }\n\n    // C\xe1c h\xe0m qu\u1ea3n l\xfd quy\u1ec1n\n    function grantRole(bytes32 role, address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        _grantRole(role, account);\n    }\n\n    function revokeRole(bytes32 role, address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        _revokeRole(role, account);\n    }\n\n    // C\u1ea5p quy\u1ec1n cho t\u1eebng role c\u1ee5 th\u1ec3\n    function grantLecturerRole(address account) public onlyRole(ADMIN_ROLE) {\n        _grantRole(LECTURER_ROLE, account);\n    }\n\n    function grantStudentRole(address account) public onlyRole(ADMIN_ROLE) {\n        _grantRole(STUDENT_ROLE, account);\n    }\n\n    function grantEmployerRole(address account) public onlyRole(ADMIN_ROLE) {\n        _grantRole(EMPLOYER_ROLE, account);\n    }\n\n    // Thu h\u1ed3i quy\u1ec1n cho t\u1eebng role c\u1ee5 th\u1ec3\n    function revokeLecturerRole(address account) public onlyRole(ADMIN_ROLE) {\n        _revokeRole(LECTURER_ROLE, account);\n    }\n\n    function revokeStudentRole(address account) public onlyRole(ADMIN_ROLE) {\n        _revokeRole(STUDENT_ROLE, account);\n    }\n\n    function revokeEmployerRole(address account) public onlyRole(ADMIN_ROLE) {\n        _revokeRole(EMPLOYER_ROLE, account);\n    }\n\n    // Qu\u1ea3n l\xfd \u0111\u1ecba ch\u1ec9 sinh vi\xean\n    function setStudentAddress(uint256 _student_id, address _studentAddress) public onlyRole(ADMIN_ROLE) {\n        if(_student_id == 0) revert Errors.E003();\n        if(_studentAddress == address(0)) revert Errors.E005();\n        if(studentAddresses[_student_id] != address(0)) revert Errors.E203();\n        if(addressToStudentId[_studentAddress] != 0) revert Errors.E202();\n\n        studentAddresses[_student_id] = _studentAddress;\n        addressToStudentId[_studentAddress] = _student_id;\n\n        emit StudentAddressSet(_student_id, _studentAddress, msg.sender);\n    }\n\n    function updateStudentAddress(uint256 _student_id, address _newAddress) public onlyRole(ADMIN_ROLE) {\n        if(_student_id == 0) revert Errors.E003();\n        if(_newAddress == address(0)) revert Errors.E005();\n        if(studentAddresses[_student_id] == address(0)) revert Errors.E201();\n        if(addressToStudentId[_newAddress] != 0) revert Errors.E202();\n\n        address oldAddress = studentAddresses[_student_id];\n        delete addressToStudentId[oldAddress];\n        studentAddresses[_student_id] = _newAddress;\n        addressToStudentId[_newAddress] = _student_id;\n\n        emit StudentAddressUpdated(_student_id, oldAddress, _newAddress, msg.sender);\n    }\n\n    // Truy v\u1ea5n th\xf4ng tin sinh vi\xean\n    function getStudentAddress(uint256 _student_id) public view returns (address) {\n        return studentAddresses[_student_id];\n    }\n\n    function getStudentIdByAddress(address _address) public view returns (uint256) {\n        return addressToStudentId[_address];\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"-resulthash-contract",children:"\ud83d\udcca ResultHash Contract"}),"\n",(0,s.jsx)(e.p,{children:"Contract l\u01b0u tr\u1eef hash c\u1ee7a k\u1ebft qu\u1ea3 thi."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ResultHash {\n    struct Result {\n        bytes32 resultHash;   // Hash c\u1ee7a k\u1ebft qu\u1ea3\n        uint256 timestamp;    // Th\u1eddi \u0111i\u1ec3m l\u01b0u\n        bool isLocked;        // Tr\u1ea1ng th\xe1i kh\xf3a\n    }\n    \n    mapping(uint256 => mapping(address => Result)) public results;\n    \n    event ResultSubmitted(\n        uint256 indexed examId,\n        address indexed student,\n        bytes32 resultHash\n    );\n    \n    function submitResult(\n        uint256 examId,\n        bytes32 resultHash\n    ) public {\n        require(!results[examId][msg.sender].isLocked, "Result is locked");\n        \n        results[examId][msg.sender] = Result({\n            resultHash: resultHash,\n            timestamp: block.timestamp,\n            isLocked: false\n        });\n        \n        emit ResultSubmitted(examId, msg.sender, resultHash);\n    }\n    \n    function lockResult(uint256 examId, address student) public {\n        // Ch\u1ec9 gi\u1ea3ng vi\xean ho\u1eb7c admin c\xf3 th\u1ec3 kh\xf3a\n        results[examId][student].isLocked = true;\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"-certificatenft-contract",children:"\ud83c\udf93 CertificateNFT Contract"}),"\n",(0,s.jsx)(e.p,{children:"Contract qu\u1ea3n l\xfd ch\u1ee9ng ch\u1ec9 h\u1ecdc ph\u1ea7n d\u01b0\u1edbi d\u1ea1ng NFT."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport "@openzeppelin/contracts/token/ERC721/ERC721.sol";\nimport "@openzeppelin/contracts/access/AccessControl.sol";\n\ncontract CertificateNFT is ERC721, AccessControl {\n    bytes32 public constant ISSUER_ROLE = keccak256("ISSUER_ROLE");\n    \n    struct Certificate {\n        string courseId;      // M\xe3 m\xf4n h\u1ecdc\n        string ipfsHash;      // Hash c\u1ee7a ch\u1ee9ng ch\u1ec9 tr\xean IPFS\n        uint256 issueDate;    // Ng\xe0y c\u1ea5p\n        address issuer;       // \u0110\u1ecba ch\u1ec9 ng\u01b0\u1eddi c\u1ea5p\n    }\n    \n    mapping(uint256 => Certificate) public certificates;\n    uint256 private _tokenIds;\n    \n    constructor() ERC721("CertificateNFT", "CERT") {\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n    \n    function issueCertificate(\n        address student,\n        string memory courseId,\n        string memory ipfsHash\n    ) public onlyRole(ISSUER_ROLE) returns (uint256) {\n        _tokenIds++;\n        uint256 newCertId = _tokenIds;\n        \n        _mint(student, newCertId);\n        \n        certificates[newCertId] = Certificate({\n            courseId: courseId,\n            ipfsHash: ipfsHash,\n            issueDate: block.timestamp,\n            issuer: msg.sender\n        });\n        \n        return newCertId;\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"-quy-tr\xecnh-t\u01b0\u01a1ng-t\xe1c",children:"\ud83d\udd04 Quy tr\xecnh t\u01b0\u01a1ng t\xe1c"}),"\n",(0,s.jsx)(e.h3,{id:"t\u1ea1o-v\xe0-qu\u1ea3n-l\xfd-\u0111\u1ec1-thi",children:"T\u1ea1o v\xe0 qu\u1ea3n l\xfd \u0111\u1ec1 thi"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["Gi\u1ea3ng vi\xean t\u1ea1o \u0111\u1ec1 thi m\u1edbi qua ",(0,s.jsx)(e.code,{children:"ExamNFT.createExam()"})]}),"\n",(0,s.jsx)(e.li,{children:"Upload \u0111\u1ec1 thi l\xean IPFS, l\u01b0u hash"}),"\n",(0,s.jsxs)(e.li,{children:["C\xf4ng b\u1ed1 \u0111\u1ec1 thi qua ",(0,s.jsx)(e.code,{children:"ExamNFT.publishExam()"})]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"n\u1ed9p-v\xe0-l\u01b0u-k\u1ebft-qu\u1ea3",children:"N\u1ed9p v\xe0 l\u01b0u k\u1ebft qu\u1ea3"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Sinh vi\xean l\xe0m b\xe0i, k\u1ebft qu\u1ea3 \u0111\u01b0\u1ee3c hash"}),"\n",(0,s.jsxs)(e.li,{children:["L\u01b0u hash k\u1ebft qu\u1ea3 qua ",(0,s.jsx)(e.code,{children:"ResultHash.submitResult()"})]}),"\n",(0,s.jsx)(e.li,{children:"Sau th\u1eddi gian ph\xfac kh\u1ea3o, kh\xf3a k\u1ebft qu\u1ea3"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"c\u1ea5p-ch\u1ee9ng-ch\u1ec9",children:"C\u1ea5p ch\u1ee9ng ch\u1ec9"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Nh\xe0 tr\u01b0\u1eddng x\xe9t \u0111i\u1ec1u ki\u1ec7n c\u1ea5p ch\u1ee9ng ch\u1ec9"}),"\n",(0,s.jsxs)(e.li,{children:["T\u1ea1o ch\u1ee9ng ch\u1ec9 NFT qua ",(0,s.jsx)(e.code,{children:"CertificateNFT.issueCertificate()"})]}),"\n",(0,s.jsx)(e.li,{children:"Sinh vi\xean nh\u1eadn NFT v\xe0o v\xed"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"-b\u1ea3o-m\u1eadt",children:"\ud83d\udd12 B\u1ea3o m\u1eadt"}),"\n",(0,s.jsx)(e.h3,{id:"ph\xe2n-quy\u1ec1n",children:"Ph\xe2n quy\u1ec1n"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Gi\u1ea3ng vi\xean: T\u1ea1o v\xe0 qu\u1ea3n l\xfd \u0111\u1ec1 thi"}),"\n",(0,s.jsx)(e.li,{children:"Sinh vi\xean: N\u1ed9p k\u1ebft qu\u1ea3"}),"\n",(0,s.jsx)(e.li,{children:"Nh\xe0 tr\u01b0\u1eddng: C\u1ea5p ch\u1ee9ng ch\u1ec9"}),"\n",(0,s.jsx)(e.li,{children:"Admin: Qu\u1ea3n l\xfd roles"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"ki\u1ec3m-to\xe1n",children:"Ki\u1ec3m to\xe1n"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"S\u1eed d\u1ee5ng OpenZeppelin contracts"}),"\n",(0,s.jsx)(e.li,{children:"Access control cho m\u1ed7i ch\u1ee9c n\u0103ng"}),"\n",(0,s.jsx)(e.li,{children:"Event logging \u0111\u1ec3 theo d\xf5i"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"-testing",children:"\ud83d\udcda Testing"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'const { expect } = require("chai");\n\ndescribe("ExamNFT", function() {\n    it("Should create new exam", async function() {\n        const ExamNFT = await ethers.getContractFactory("ExamNFT");\n        const exam = await ExamNFT.deploy();\n        await exam.deployed();\n\n        const tx = await exam.createExam("ipfs://hash", 1234567890);\n        await tx.wait();\n\n        expect(await exam.ownerOf(1)).to.equal(await exam.instructor());\n    });\n});\n'})}),"\n",(0,s.jsx)(e.h2,{id:"-upgrades--migration",children:"\ud83d\udd04 Upgrades & Migration"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"S\u1eed d\u1ee5ng proxy pattern cho upgrades"}),"\n",(0,s.jsx)(e.li,{children:"C\xf3 k\u1ebf ho\u1ea1ch migration data"}),"\n",(0,s.jsx)(e.li,{children:"Backwards compatibility"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"-t\xe0i-li\u1ec7u-tham-kh\u1ea3o",children:"\ud83d\udcda T\xe0i li\u1ec7u tham kh\u1ea3o"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.openzeppelin.com/",children:"OpenZeppelin Docs"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.soliditylang.org/",children:"Solidity Docs"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://eips.ethereum.org/EIPS/eip-721",children:"ERC-721 Standard"})}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>d,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function d(n){const e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:d(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);