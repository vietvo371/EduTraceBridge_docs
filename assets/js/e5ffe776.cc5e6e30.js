"use strict";(self.webpackChunkedutrace_bridge=self.webpackChunkedutrace_bridge||[]).push([[154],{7357:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var t=i(4848),s=i(8453);const a={},r="Database Schema Documentation",c={id:"Database",title:"Database Schema Documentation",description:"\ud83d\udcca Overview",source:"@site/docs/Database.md",sourceDirName:".",slug:"/Database",permalink:"/EduTraceBridge_docs/Database",draft:!1,unlisted:!1,editUrl:"https://github.com/vietvo371/EduTraceBridge_docs/edit/main/docs/Database.md",tags:[],version:"current",frontMatter:{}},l={},o=[{value:"\ud83d\udcca Overview",id:"-overview",level:2},{value:"\ud83d\udc65 Users Collection",id:"-users-collection",level:2},{value:"\ud83c\udfeb Schools Collection",id:"-schools-collection",level:2},{value:"\ud83d\udcda Courses Collection",id:"-courses-collection",level:2},{value:"\ud83d\udcdd Exams Collection",id:"-exams-collection",level:2},{value:"\ud83d\udccb Submissions Collection",id:"-submissions-collection",level:2},{value:"\ud83c\udf93 Certificates Collection",id:"-certificates-collection",level:2},{value:"\ud83d\udd04 Relationships",id:"-relationships",level:2},{value:"\ud83d\udd12 Indexes",id:"-indexes",level:2},{value:"Users Collection",id:"users-collection",level:3},{value:"Exams Collection",id:"exams-collection",level:3},{value:"Certificates Collection",id:"certificates-collection",level:3},{value:"\ud83d\udd10 Data Validation",id:"-data-validation",level:2},{value:"Users Schema Validation",id:"users-schema-validation",level:3},{value:"Certificates Schema Validation",id:"certificates-schema-validation",level:3},{value:"\ud83d\udcca Sample Queries",id:"-sample-queries",level:2},{value:"Get Student&#39;s Certificates with Course Info",id:"get-students-certificates-with-course-info",level:3},{value:"Get Active Exams for Student",id:"get-active-exams-for-student",level:3},{value:"\ud83d\udd04 Data Migration",id:"-data-migration",level:2},{value:"Version Control",id:"version-control",level:3},{value:"Backup Strategy",id:"backup-strategy",level:3},{value:"\ud83d\udcc8 Performance Optimization",id:"-performance-optimization",level:2},{value:"Indexing Strategy",id:"indexing-strategy",level:3},{value:"Caching",id:"caching",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"database-schema-documentation",children:"Database Schema Documentation"}),"\n",(0,t.jsx)(n.h2,{id:"-overview",children:"\ud83d\udcca Overview"}),"\n",(0,t.jsx)(n.p,{children:"EduBridgeTrace s\u1eed d\u1ee5ng MongoDB l\xe0m c\u01a1 s\u1edf d\u1eef li\u1ec7u ch\xednh \u0111\u1ec3 l\u01b0u tr\u1eef th\xf4ng tin off-chain. D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c t\u1ed5 ch\u1ee9c theo c\xe1c collection sau:"}),"\n",(0,t.jsx)(n.h2,{id:"-users-collection",children:"\ud83d\udc65 Users Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'{\n  _id: ObjectId,\n  email: String,\n  password: String, // Hashed\n  role: String, // "student" | "instructor" | "school" | "employer"\n  name: String,\n  walletAddress: String,\n  createdAt: Date,\n  updatedAt: Date,\n  \n  // Specific fields based on role\n  student: {\n    studentId: String,\n    school: ObjectId,\n    major: String,\n    enrollmentYear: Number\n  },\n  \n  instructor: {\n    employeeId: String,\n    school: ObjectId,\n    department: String,\n    specialization: String\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-schools-collection",children:"\ud83c\udfeb Schools Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"{\n  _id: ObjectId,\n  name: String,\n  code: String,\n  address: String,\n  walletAddress: String,\n  admins: [ObjectId], // Reference to Users\n  createdAt: Date,\n  updatedAt: Date,\n  \n  // Blockchain related\n  contractAddress: String,\n  issuerRole: String\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-courses-collection",children:"\ud83d\udcda Courses Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"{\n  _id: ObjectId,\n  code: String,\n  name: String,\n  description: String,\n  credits: Number,\n  school: ObjectId,\n  department: String,\n  instructor: ObjectId,\n  \n  // Academic info\n  semester: String,\n  year: Number,\n  startDate: Date,\n  endDate: Date\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-exams-collection",children:"\ud83d\udcdd Exams Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'{\n  _id: ObjectId,\n  course: ObjectId,\n  title: String,\n  description: String,\n  instructor: ObjectId,\n  \n  // Blockchain info\n  tokenId: String,\n  ipfsHash: String,\n  contractAddress: String,\n  \n  // Timing\n  startTime: Date,\n  endTime: Date,\n  publishedAt: Date,\n  \n  // Status\n  status: String, // "draft" | "published" | "active" | "completed"\n  \n  // Settings\n  duration: Number,\n  maxAttempts: Number,\n  passingScore: Number\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-submissions-collection",children:"\ud83d\udccb Submissions Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"{\n  _id: ObjectId,\n  exam: ObjectId,\n  student: ObjectId,\n  submittedAt: Date,\n  \n  // Answer data\n  answers: [{\n    questionId: String,\n    answer: String,\n    score: Number\n  }],\n  \n  // Blockchain info\n  resultHash: String,\n  transactionHash: String,\n  \n  // Grading\n  totalScore: Number,\n  feedback: String,\n  gradedBy: ObjectId,\n  gradedAt: Date,\n  \n  // Review\n  reviewRequested: Boolean,\n  reviewStatus: String,\n  reviewFeedback: String\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-certificates-collection",children:"\ud83c\udf93 Certificates Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"{\n  _id: ObjectId,\n  student: ObjectId,\n  course: ObjectId,\n  school: ObjectId,\n  \n  // Academic info\n  grade: String,\n  issueDate: Date,\n  expiryDate: Date,\n  \n  // Blockchain info\n  tokenId: String,\n  ipfsHash: String,\n  contractAddress: String,\n  transactionHash: String,\n  \n  // Metadata\n  metadata: {\n    type: String,\n    achievements: [String],\n    skills: [String]\n  },\n  \n  // Verification\n  verificationCount: Number,\n  lastVerifiedAt: Date\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-relationships",children:"\ud83d\udd04 Relationships"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"erDiagram\n    USERS ||--o{ SUBMISSIONS : submits\n    USERS ||--o{ EXAMS : creates\n    USERS ||--o{ CERTIFICATES : receives\n    SCHOOLS ||--o{ USERS : has\n    SCHOOLS ||--o{ COURSES : offers\n    COURSES ||--o{ EXAMS : contains\n    EXAMS ||--o{ SUBMISSIONS : receives\n    COURSES ||--o{ CERTIFICATES : issues\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-indexes",children:"\ud83d\udd12 Indexes"}),"\n",(0,t.jsx)(n.h3,{id:"users-collection",children:"Users Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"{\n  email: 1,\n  unique: true\n}\n{\n  walletAddress: 1,\n  sparse: true\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"exams-collection",children:"Exams Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"{\n  course: 1,\n  startTime: 1\n}\n{\n  tokenId: 1,\n  unique: true,\n  sparse: true\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"certificates-collection",children:"Certificates Collection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"{\n  tokenId: 1,\n  unique: true\n}\n{\n  student: 1,\n  course: 1\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-data-validation",children:"\ud83d\udd10 Data Validation"}),"\n",(0,t.jsx)(n.h3,{id:"users-schema-validation",children:"Users Schema Validation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'{\n  $jsonSchema: {\n    required: ["email", "password", "role", "name"],\n    properties: {\n      email: {\n        bsonType: "string",\n        pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$"\n      },\n      role: {\n        enum: ["student", "instructor", "school", "employer"]\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"certificates-schema-validation",children:"Certificates Schema Validation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'{\n  $jsonSchema: {\n    required: ["student", "course", "school", "grade"],\n    properties: {\n      grade: {\n        enum: ["A", "B", "C", "D", "F"]\n      },\n      tokenId: {\n        bsonType: "string",\n        pattern: "^0x[a-fA-F0-9]{40}$"\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-sample-queries",children:"\ud83d\udcca Sample Queries"}),"\n",(0,t.jsx)(n.h3,{id:"get-students-certificates-with-course-info",children:"Get Student's Certificates with Course Info"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'db.certificates.aggregate([\n  {\n    $match: {\n      student: studentId\n    }\n  },\n  {\n    $lookup: {\n      from: "courses",\n      localField: "course",\n      foreignField: "_id",\n      as: "courseInfo"\n    }\n  }\n])\n'})}),"\n",(0,t.jsx)(n.h3,{id:"get-active-exams-for-student",children:"Get Active Exams for Student"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'db.exams.aggregate([\n  {\n    $match: {\n      status: "active",\n      startTime: { $lte: new Date() },\n      endTime: { $gte: new Date() }\n    }\n  },\n  {\n    $lookup: {\n      from: "courses",\n      localField: "course",\n      foreignField: "_id",\n      as: "courseInfo"\n    }\n  }\n])\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-data-migration",children:"\ud83d\udd04 Data Migration"}),"\n",(0,t.jsx)(n.h3,{id:"version-control",children:"Version Control"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use semantic versioning for schema changes"}),"\n",(0,t.jsx)(n.li,{children:"Maintain migration scripts"}),"\n",(0,t.jsx)(n.li,{children:"Test migrations on staging first"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"backup-strategy",children:"Backup Strategy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Daily automated backups"}),"\n",(0,t.jsx)(n.li,{children:"Point-in-time recovery"}),"\n",(0,t.jsx)(n.li,{children:"Geo-redundant storage"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-performance-optimization",children:"\ud83d\udcc8 Performance Optimization"}),"\n",(0,t.jsx)(n.h3,{id:"indexing-strategy",children:"Indexing Strategy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create indexes based on common queries"}),"\n",(0,t.jsx)(n.li,{children:"Use compound indexes for frequently combined fields"}),"\n",(0,t.jsx)(n.li,{children:"Monitor and update indexes based on usage"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"caching",children:"Caching"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Implement application-level caching"}),"\n",(0,t.jsx)(n.li,{children:"Use MongoDB's built-in caching"}),"\n",(0,t.jsx)(n.li,{children:"Cache blockchain data when possible"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);